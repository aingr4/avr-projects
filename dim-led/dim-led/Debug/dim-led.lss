
dim-led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  0000095e  000009f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000095e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000407  00800132  00800132  00000a24  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a24  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fe7  00000000  00000000  00000b60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000095c  00000000  00000000  00001b47  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006dc  00000000  00000000  000024a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000198  00000000  00000000  00002b80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f0  00000000  00000000  00002d18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000047b  00000000  00000000  00003308  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00003783  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 90 00 	jmp	0x120	; 0x120 <__vector_20>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e5       	ldi	r30, 0x5E	; 94
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 33       	cpi	r26, 0x32	; 50
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	25 e0       	ldi	r18, 0x05	; 5
  8c:	a2 e3       	ldi	r26, 0x32	; 50
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a9 33       	cpi	r26, 0x39	; 57
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 77 01 	call	0x2ee	; 0x2ee <main>
  9e:	0c 94 ad 04 	jmp	0x95a	; 0x95a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <usartInit>:
	usartSerialRead();
}

void usartInit(void)
{
	serialBuffer.readPos = 0;
  a6:	10 92 32 05 	sts	0x0532, r1	; 0x800532 <__data_end+0x400>
	serialBuffer.writePos = 0;
  aa:	10 92 33 05 	sts	0x0533, r1	; 0x800533 <__data_end+0x401>
	
	UBRR0H = (BRC >> 8);
  ae:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L =  BRC;
  b2:	87 e6       	ldi	r24, 0x67	; 103
  b4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	UCSR0B = (1 << TXEN0)  | (1 << TXCIE0); // Enable TX and TX Interrupt
  b8:	88 e4       	ldi	r24, 0x48	; 72
  ba:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // 8-bit character size
  be:	86 e0       	ldi	r24, 0x06	; 6
  c0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	sei();
  c4:	78 94       	sei
  c6:	08 95       	ret

000000c8 <usartSerialWrite>:
}

void usartSerialWrite(char *c)
{
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	dc 01       	movw	r26, r24
	while (*c)
  ce:	0c c0       	rjmp	.+24     	; 0xe8 <usartSerialWrite+0x20>
	{
		serialBuffer.buf[serialBuffer.writePos++] = *c++;
  d0:	c3 e3       	ldi	r28, 0x33	; 51
  d2:	d5 e0       	ldi	r29, 0x05	; 5
  d4:	e8 81       	ld	r30, Y
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	8e 0f       	add	r24, r30
  da:	88 83       	st	Y, r24
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	8c 91       	ld	r24, X
  e0:	ee 5c       	subi	r30, 0xCE	; 206
  e2:	fe 4f       	sbci	r31, 0xFE	; 254
  e4:	80 83       	st	Z, r24
  e6:	11 96       	adiw	r26, 0x01	; 1
	sei();
}

void usartSerialWrite(char *c)
{
	while (*c)
  e8:	8c 91       	ld	r24, X
  ea:	81 11       	cpse	r24, r1
  ec:	f1 cf       	rjmp	.-30     	; 0xd0 <usartSerialWrite+0x8>
		{
			serialBuffer.writePos = 0;
		}
	}
	
	if (UCSR0A & (1 << UDRE0))
  ee:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  f2:	85 fd       	sbrc	r24, 5
	{
		UDR0 = 0;
  f4:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	}
}
  f8:	df 91       	pop	r29
  fa:	cf 91       	pop	r28
  fc:	08 95       	ret

000000fe <usartSerialRead>:

void usartSerialRead(void)
{
	if (serialBuffer.readPos != serialBuffer.writePos)
  fe:	e0 91 32 05 	lds	r30, 0x0532	; 0x800532 <__data_end+0x400>
 102:	80 91 33 05 	lds	r24, 0x0533	; 0x800533 <__data_end+0x401>
 106:	e8 17       	cp	r30, r24
 108:	51 f0       	breq	.+20     	; 0x11e <usartSerialRead+0x20>
	{
		UDR0 = serialBuffer.buf[serialBuffer.readPos++];
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	8e 0f       	add	r24, r30
 10e:	80 93 32 05 	sts	0x0532, r24	; 0x800532 <__data_end+0x400>
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	ee 5c       	subi	r30, 0xCE	; 206
 116:	fe 4f       	sbci	r31, 0xFE	; 254
 118:	80 81       	ld	r24, Z
 11a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 11e:	08 95       	ret

00000120 <__vector_20>:
#include <avr/interrupt.h>

UsartSerialBuffer serialBuffer;

ISR(USART_TX_vect)
{
 120:	1f 92       	push	r1
 122:	0f 92       	push	r0
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	0f 92       	push	r0
 128:	11 24       	eor	r1, r1
 12a:	2f 93       	push	r18
 12c:	3f 93       	push	r19
 12e:	4f 93       	push	r20
 130:	5f 93       	push	r21
 132:	6f 93       	push	r22
 134:	7f 93       	push	r23
 136:	8f 93       	push	r24
 138:	9f 93       	push	r25
 13a:	af 93       	push	r26
 13c:	bf 93       	push	r27
 13e:	ef 93       	push	r30
 140:	ff 93       	push	r31
	usartSerialRead();
 142:	0e 94 7f 00 	call	0xfe	; 0xfe <usartSerialRead>
}
 146:	ff 91       	pop	r31
 148:	ef 91       	pop	r30
 14a:	bf 91       	pop	r27
 14c:	af 91       	pop	r26
 14e:	9f 91       	pop	r25
 150:	8f 91       	pop	r24
 152:	7f 91       	pop	r23
 154:	6f 91       	pop	r22
 156:	5f 91       	pop	r21
 158:	4f 91       	pop	r20
 15a:	3f 91       	pop	r19
 15c:	2f 91       	pop	r18
 15e:	0f 90       	pop	r0
 160:	0f be       	out	0x3f, r0	; 63
 162:	0f 90       	pop	r0
 164:	1f 90       	pop	r1
 166:	18 95       	reti

00000168 <logInit>:
uint32_t  logId;

void logInit(LogMethod method)
{
#ifdef ENABLE_LOGGING
	logMethod = method;
 168:	80 93 38 05 	sts	0x0538, r24	; 0x800538 <logMethod>
	logId = 0;
 16c:	10 92 34 05 	sts	0x0534, r1	; 0x800534 <logId>
 170:	10 92 35 05 	sts	0x0535, r1	; 0x800535 <logId+0x1>
 174:	10 92 36 05 	sts	0x0536, r1	; 0x800536 <logId+0x2>
 178:	10 92 37 05 	sts	0x0537, r1	; 0x800537 <logId+0x3>
	
	if (logMethod == LogMethod_USART)
 17c:	81 11       	cpse	r24, r1
 17e:	02 c0       	rjmp	.+4      	; 0x184 <logInit+0x1c>
	{
		usartInit();
 180:	0e 94 53 00 	call	0xa6	; 0xa6 <usartInit>
 184:	08 95       	ret

00000186 <logSendStr>:
}

void logSendStr(char *logStr)
{
#ifdef ENABLE_LOGGING
	switch(logMethod)
 186:	20 91 38 05 	lds	r18, 0x0538	; 0x800538 <logMethod>
 18a:	21 11       	cpse	r18, r1
 18c:	02 c0       	rjmp	.+4      	; 0x192 <logSendStr+0xc>
	{
		case LogMethod_USART:
			usartSerialWrite(logStr);
 18e:	0e 94 64 00 	call	0xc8	; 0xc8 <usartSerialWrite>
 192:	08 95       	ret

00000194 <logLevelToStr>:

char* logLevelToStr(LogLevel level)
{
	char *levelStr = "";
	
	switch (level)
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	61 f0       	breq	.+24     	; 0x1b0 <logLevelToStr+0x1c>
 198:	40 f0       	brcs	.+16     	; 0x1aa <logLevelToStr+0x16>
 19a:	82 30       	cpi	r24, 0x02	; 2
 19c:	19 f0       	breq	.+6      	; 0x1a4 <logLevelToStr+0x10>
#endif /* ENABLE_DEBUGGING */
}

char* logLevelToStr(LogLevel level)
{
	char *levelStr = "";
 19e:	81 e3       	ldi	r24, 0x31	; 49
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	08 95       	ret
	{
		case LogLevel_INFO:
			levelStr = "INFO";
			break;
		case LogLevel_DEBUG:
			levelStr = "DEBUG";
 1a4:	85 e0       	ldi	r24, 0x05	; 5
 1a6:	91 e0       	ldi	r25, 0x01	; 1
			break;
 1a8:	08 95       	ret
		case LogLevel_ERROR:
			levelStr = "ERROR";
 1aa:	8b e0       	ldi	r24, 0x0B	; 11
 1ac:	91 e0       	ldi	r25, 0x01	; 1
			break;
 1ae:	08 95       	ret
	char *levelStr = "";
	
	switch (level)
	{
		case LogLevel_INFO:
			levelStr = "INFO";
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	91 e0       	ldi	r25, 0x01	; 1
		default:
			break;
	}
	
	return levelStr;
}
 1b4:	08 95       	ret

000001b6 <logWrite>:
	}
#endif /* ENABLE_LOGGING */
}

void logWrite(LogLevel level, char *formatStr)
{
 1b6:	cf 92       	push	r12
 1b8:	df 92       	push	r13
 1ba:	ef 92       	push	r14
 1bc:	ff 92       	push	r15
 1be:	0f 93       	push	r16
 1c0:	1f 93       	push	r17
 1c2:	cf 93       	push	r28
 1c4:	df 93       	push	r29
 1c6:	cd b7       	in	r28, 0x3d	; 61
 1c8:	de b7       	in	r29, 0x3e	; 62
 1ca:	c6 59       	subi	r28, 0x96	; 150
 1cc:	d1 09       	sbc	r29, r1
 1ce:	0f b6       	in	r0, 0x3f	; 63
 1d0:	f8 94       	cli
 1d2:	de bf       	out	0x3e, r29	; 62
 1d4:	0f be       	out	0x3f, r0	; 63
 1d6:	cd bf       	out	0x3d, r28	; 61
#ifdef ENABLE_LOGGING

	char    logStr[LOG_STR_LEN]            = "";
 1d8:	1a 82       	std	Y+2, r1	; 0x02
 1da:	19 82       	std	Y+1, r1	; 0x01
 1dc:	fe 01       	movw	r30, r28
 1de:	33 96       	adiw	r30, 0x03	; 3
 1e0:	9e e7       	ldi	r25, 0x7E	; 126
 1e2:	df 01       	movw	r26, r30
 1e4:	1d 92       	st	X+, r1
 1e6:	9a 95       	dec	r25
 1e8:	e9 f7       	brne	.-6      	; 0x1e4 <logWrite+0x2e>
	char    logIdStr[LOG_ID_STR_LEN]       = "";
 1ea:	e2 58       	subi	r30, 0x82	; 130
 1ec:	ff 4f       	sbci	r31, 0xFF	; 255
 1ee:	11 92       	st	Z+, r1
 1f0:	11 92       	st	Z+, r1
 1f2:	9b e0       	ldi	r25, 0x0B	; 11
 1f4:	df 01       	movw	r26, r30
 1f6:	1d 92       	st	X+, r1
 1f8:	9a 95       	dec	r25
 1fa:	e9 f7       	brne	.-6      	; 0x1f6 <logWrite+0x40>
	char    logLevelStr[LOG_LEVEL_STR_LEN] = "";
 1fc:	fe 01       	movw	r30, r28
 1fe:	e2 57       	subi	r30, 0x72	; 114
 200:	ff 4f       	sbci	r31, 0xFF	; 255
 202:	11 92       	st	Z+, r1
 204:	11 92       	st	Z+, r1
 206:	97 e0       	ldi	r25, 0x07	; 7
 208:	df 01       	movw	r26, r30
 20a:	1d 92       	st	X+, r1
 20c:	9a 95       	dec	r25
 20e:	e9 f7       	brne	.-6      	; 0x20a <logWrite+0x54>
	
	if (level <= LOG_LEVEL)
 210:	83 30       	cpi	r24, 0x03	; 3
 212:	08 f0       	brcs	.+2      	; 0x216 <logWrite+0x60>
 214:	5c c0       	rjmp	.+184    	; 0x2ce <logWrite+0x118>
 216:	7b 01       	movw	r14, r22
 218:	18 2f       	mov	r17, r24
	{
		snprintf(logIdStr, sizeof(logIdStr), "[%lu] ", logId++);
 21a:	80 91 34 05 	lds	r24, 0x0534	; 0x800534 <logId>
 21e:	90 91 35 05 	lds	r25, 0x0535	; 0x800535 <logId+0x1>
 222:	a0 91 36 05 	lds	r26, 0x0536	; 0x800536 <logId+0x2>
 226:	b0 91 37 05 	lds	r27, 0x0537	; 0x800537 <logId+0x3>
 22a:	ac 01       	movw	r20, r24
 22c:	bd 01       	movw	r22, r26
 22e:	4f 5f       	subi	r20, 0xFF	; 255
 230:	5f 4f       	sbci	r21, 0xFF	; 255
 232:	6f 4f       	sbci	r22, 0xFF	; 255
 234:	7f 4f       	sbci	r23, 0xFF	; 255
 236:	40 93 34 05 	sts	0x0534, r20	; 0x800534 <logId>
 23a:	50 93 35 05 	sts	0x0535, r21	; 0x800535 <logId+0x1>
 23e:	60 93 36 05 	sts	0x0536, r22	; 0x800536 <logId+0x2>
 242:	70 93 37 05 	sts	0x0537, r23	; 0x800537 <logId+0x3>
 246:	bf 93       	push	r27
 248:	af 93       	push	r26
 24a:	9f 93       	push	r25
 24c:	8f 93       	push	r24
 24e:	81 e1       	ldi	r24, 0x11	; 17
 250:	91 e0       	ldi	r25, 0x01	; 1
 252:	9f 93       	push	r25
 254:	8f 93       	push	r24
 256:	1f 92       	push	r1
 258:	8d e0       	ldi	r24, 0x0D	; 13
 25a:	8f 93       	push	r24
 25c:	6e 01       	movw	r12, r28
 25e:	b1 e8       	ldi	r27, 0x81	; 129
 260:	cb 0e       	add	r12, r27
 262:	d1 1c       	adc	r13, r1
 264:	df 92       	push	r13
 266:	cf 92       	push	r12
 268:	0e 94 b5 01 	call	0x36a	; 0x36a <snprintf>
		snprintf(logLevelStr, sizeof(logLevelStr), "[%s] ", logLevelToStr(level));
 26c:	81 2f       	mov	r24, r17
 26e:	0e 94 ca 00 	call	0x194	; 0x194 <logLevelToStr>
 272:	9f 93       	push	r25
 274:	8f 93       	push	r24
 276:	88 e1       	ldi	r24, 0x18	; 24
 278:	91 e0       	ldi	r25, 0x01	; 1
 27a:	9f 93       	push	r25
 27c:	8f 93       	push	r24
 27e:	1f 92       	push	r1
 280:	89 e0       	ldi	r24, 0x09	; 9
 282:	8f 93       	push	r24
 284:	8e 01       	movw	r16, r28
 286:	02 57       	subi	r16, 0x72	; 114
 288:	1f 4f       	sbci	r17, 0xFF	; 255
 28a:	1f 93       	push	r17
 28c:	0f 93       	push	r16
 28e:	0e 94 b5 01 	call	0x36a	; 0x36a <snprintf>
		strncat(logStr, logIdStr, sizeof(logIdStr));
 292:	4d e0       	ldi	r20, 0x0D	; 13
 294:	50 e0       	ldi	r21, 0x00	; 0
 296:	b6 01       	movw	r22, r12
 298:	ce 01       	movw	r24, r28
 29a:	01 96       	adiw	r24, 0x01	; 1
 29c:	0e 94 a5 01 	call	0x34a	; 0x34a <strncat>
		strncat(logStr, logLevelStr, sizeof(logLevelStr));
 2a0:	49 e0       	ldi	r20, 0x09	; 9
 2a2:	50 e0       	ldi	r21, 0x00	; 0
 2a4:	b8 01       	movw	r22, r16
 2a6:	ce 01       	movw	r24, r28
 2a8:	01 96       	adiw	r24, 0x01	; 1
 2aa:	0e 94 a5 01 	call	0x34a	; 0x34a <strncat>
		strncat(logStr, formatStr, LOG_FORMAT_STR_LEN);
 2ae:	4a e6       	ldi	r20, 0x6A	; 106
 2b0:	50 e0       	ldi	r21, 0x00	; 0
 2b2:	b7 01       	movw	r22, r14
 2b4:	ce 01       	movw	r24, r28
 2b6:	01 96       	adiw	r24, 0x01	; 1
 2b8:	0e 94 a5 01 	call	0x34a	; 0x34a <strncat>
		
		logSendStr(logStr);	
 2bc:	ce 01       	movw	r24, r28
 2be:	01 96       	adiw	r24, 0x01	; 1
 2c0:	0e 94 c3 00 	call	0x186	; 0x186 <logSendStr>
 2c4:	0f b6       	in	r0, 0x3f	; 63
 2c6:	f8 94       	cli
 2c8:	de bf       	out	0x3e, r29	; 62
 2ca:	0f be       	out	0x3f, r0	; 63
 2cc:	cd bf       	out	0x3d, r28	; 61
	}
	
#endif /* ENABLE_DEBUGGING */
}
 2ce:	ca 56       	subi	r28, 0x6A	; 106
 2d0:	df 4f       	sbci	r29, 0xFF	; 255
 2d2:	0f b6       	in	r0, 0x3f	; 63
 2d4:	f8 94       	cli
 2d6:	de bf       	out	0x3e, r29	; 62
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	cd bf       	out	0x3d, r28	; 61
 2dc:	df 91       	pop	r29
 2de:	cf 91       	pop	r28
 2e0:	1f 91       	pop	r17
 2e2:	0f 91       	pop	r16
 2e4:	ff 90       	pop	r15
 2e6:	ef 90       	pop	r14
 2e8:	df 90       	pop	r13
 2ea:	cf 90       	pop	r12
 2ec:	08 95       	ret

000002ee <main>:

void dimLedMain();

int main() 
{	
	LOG_INIT(LogMethod_USART);
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	0e 94 b4 00 	call	0x168	; 0x168 <logInit>
	
	while (true)
	{
		LOG(LogLevel_ERROR, "Error\n");
 2f4:	6e e1       	ldi	r22, 0x1E	; 30
 2f6:	71 e0       	ldi	r23, 0x01	; 1
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	0e 94 db 00 	call	0x1b6	; 0x1b6 <logWrite>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2fe:	2f ef       	ldi	r18, 0xFF	; 255
 300:	89 e6       	ldi	r24, 0x69	; 105
 302:	98 e1       	ldi	r25, 0x18	; 24
 304:	21 50       	subi	r18, 0x01	; 1
 306:	80 40       	sbci	r24, 0x00	; 0
 308:	90 40       	sbci	r25, 0x00	; 0
 30a:	e1 f7       	brne	.-8      	; 0x304 <main+0x16>
 30c:	00 c0       	rjmp	.+0      	; 0x30e <main+0x20>
 30e:	00 00       	nop
		_delay_ms(500);
		LOG(LogLevel_INFO, "Info\n");
 310:	65 e2       	ldi	r22, 0x25	; 37
 312:	71 e0       	ldi	r23, 0x01	; 1
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	0e 94 db 00 	call	0x1b6	; 0x1b6 <logWrite>
 31a:	2f ef       	ldi	r18, 0xFF	; 255
 31c:	89 e6       	ldi	r24, 0x69	; 105
 31e:	98 e1       	ldi	r25, 0x18	; 24
 320:	21 50       	subi	r18, 0x01	; 1
 322:	80 40       	sbci	r24, 0x00	; 0
 324:	90 40       	sbci	r25, 0x00	; 0
 326:	e1 f7       	brne	.-8      	; 0x320 <main+0x32>
 328:	00 c0       	rjmp	.+0      	; 0x32a <main+0x3c>
 32a:	00 00       	nop
		_delay_ms(500);
		LOG(LogLevel_DEBUG, "Debug\n");
 32c:	6b e2       	ldi	r22, 0x2B	; 43
 32e:	71 e0       	ldi	r23, 0x01	; 1
 330:	82 e0       	ldi	r24, 0x02	; 2
 332:	0e 94 db 00 	call	0x1b6	; 0x1b6 <logWrite>
 336:	2f ef       	ldi	r18, 0xFF	; 255
 338:	89 e6       	ldi	r24, 0x69	; 105
 33a:	98 e1       	ldi	r25, 0x18	; 24
 33c:	21 50       	subi	r18, 0x01	; 1
 33e:	80 40       	sbci	r24, 0x00	; 0
 340:	90 40       	sbci	r25, 0x00	; 0
 342:	e1 f7       	brne	.-8      	; 0x33c <main+0x4e>
 344:	00 c0       	rjmp	.+0      	; 0x346 <main+0x58>
 346:	00 00       	nop
 348:	d5 cf       	rjmp	.-86     	; 0x2f4 <main+0x6>

0000034a <strncat>:
 34a:	fb 01       	movw	r30, r22
 34c:	dc 01       	movw	r26, r24
 34e:	0d 90       	ld	r0, X+
 350:	00 20       	and	r0, r0
 352:	e9 f7       	brne	.-6      	; 0x34e <strncat+0x4>
 354:	11 97       	sbiw	r26, 0x01	; 1
 356:	41 50       	subi	r20, 0x01	; 1
 358:	50 40       	sbci	r21, 0x00	; 0
 35a:	28 f0       	brcs	.+10     	; 0x366 <strncat+0x1c>
 35c:	01 90       	ld	r0, Z+
 35e:	00 20       	and	r0, r0
 360:	0d 92       	st	X+, r0
 362:	c9 f7       	brne	.-14     	; 0x356 <strncat+0xc>
 364:	08 95       	ret
 366:	1c 92       	st	X, r1
 368:	08 95       	ret

0000036a <snprintf>:
 36a:	ae e0       	ldi	r26, 0x0E	; 14
 36c:	b0 e0       	ldi	r27, 0x00	; 0
 36e:	eb eb       	ldi	r30, 0xBB	; 187
 370:	f1 e0       	ldi	r31, 0x01	; 1
 372:	0c 94 84 04 	jmp	0x908	; 0x908 <__stack+0x9>
 376:	0d 89       	ldd	r16, Y+21	; 0x15
 378:	1e 89       	ldd	r17, Y+22	; 0x16
 37a:	8f 89       	ldd	r24, Y+23	; 0x17
 37c:	98 8d       	ldd	r25, Y+24	; 0x18
 37e:	26 e0       	ldi	r18, 0x06	; 6
 380:	2c 83       	std	Y+4, r18	; 0x04
 382:	1a 83       	std	Y+2, r17	; 0x02
 384:	09 83       	std	Y+1, r16	; 0x01
 386:	97 ff       	sbrs	r25, 7
 388:	02 c0       	rjmp	.+4      	; 0x38e <snprintf+0x24>
 38a:	80 e0       	ldi	r24, 0x00	; 0
 38c:	90 e8       	ldi	r25, 0x80	; 128
 38e:	01 97       	sbiw	r24, 0x01	; 1
 390:	9e 83       	std	Y+6, r25	; 0x06
 392:	8d 83       	std	Y+5, r24	; 0x05
 394:	ae 01       	movw	r20, r28
 396:	45 5e       	subi	r20, 0xE5	; 229
 398:	5f 4f       	sbci	r21, 0xFF	; 255
 39a:	69 8d       	ldd	r22, Y+25	; 0x19
 39c:	7a 8d       	ldd	r23, Y+26	; 0x1a
 39e:	ce 01       	movw	r24, r28
 3a0:	01 96       	adiw	r24, 0x01	; 1
 3a2:	0e 94 e5 01 	call	0x3ca	; 0x3ca <vfprintf>
 3a6:	4d 81       	ldd	r20, Y+5	; 0x05
 3a8:	5e 81       	ldd	r21, Y+6	; 0x06
 3aa:	57 fd       	sbrc	r21, 7
 3ac:	0a c0       	rjmp	.+20     	; 0x3c2 <snprintf+0x58>
 3ae:	2f 81       	ldd	r18, Y+7	; 0x07
 3b0:	38 85       	ldd	r19, Y+8	; 0x08
 3b2:	42 17       	cp	r20, r18
 3b4:	53 07       	cpc	r21, r19
 3b6:	0c f4       	brge	.+2      	; 0x3ba <snprintf+0x50>
 3b8:	9a 01       	movw	r18, r20
 3ba:	f8 01       	movw	r30, r16
 3bc:	e2 0f       	add	r30, r18
 3be:	f3 1f       	adc	r31, r19
 3c0:	10 82       	st	Z, r1
 3c2:	2e 96       	adiw	r28, 0x0e	; 14
 3c4:	e4 e0       	ldi	r30, 0x04	; 4
 3c6:	0c 94 a0 04 	jmp	0x940	; 0x940 <__epilogue_restores__+0x1c>

000003ca <vfprintf>:
 3ca:	ab e0       	ldi	r26, 0x0B	; 11
 3cc:	b0 e0       	ldi	r27, 0x00	; 0
 3ce:	eb ee       	ldi	r30, 0xEB	; 235
 3d0:	f1 e0       	ldi	r31, 0x01	; 1
 3d2:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__prologue_saves__>
 3d6:	6c 01       	movw	r12, r24
 3d8:	7b 01       	movw	r14, r22
 3da:	8a 01       	movw	r16, r20
 3dc:	fc 01       	movw	r30, r24
 3de:	17 82       	std	Z+7, r1	; 0x07
 3e0:	16 82       	std	Z+6, r1	; 0x06
 3e2:	83 81       	ldd	r24, Z+3	; 0x03
 3e4:	81 ff       	sbrs	r24, 1
 3e6:	cc c1       	rjmp	.+920    	; 0x780 <__EEPROM_REGION_LENGTH__+0x380>
 3e8:	ce 01       	movw	r24, r28
 3ea:	01 96       	adiw	r24, 0x01	; 1
 3ec:	3c 01       	movw	r6, r24
 3ee:	f6 01       	movw	r30, r12
 3f0:	93 81       	ldd	r25, Z+3	; 0x03
 3f2:	f7 01       	movw	r30, r14
 3f4:	93 fd       	sbrc	r25, 3
 3f6:	85 91       	lpm	r24, Z+
 3f8:	93 ff       	sbrs	r25, 3
 3fa:	81 91       	ld	r24, Z+
 3fc:	7f 01       	movw	r14, r30
 3fe:	88 23       	and	r24, r24
 400:	09 f4       	brne	.+2      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 402:	ba c1       	rjmp	.+884    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
 404:	85 32       	cpi	r24, 0x25	; 37
 406:	39 f4       	brne	.+14     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 408:	93 fd       	sbrc	r25, 3
 40a:	85 91       	lpm	r24, Z+
 40c:	93 ff       	sbrs	r25, 3
 40e:	81 91       	ld	r24, Z+
 410:	7f 01       	movw	r14, r30
 412:	85 32       	cpi	r24, 0x25	; 37
 414:	29 f4       	brne	.+10     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 416:	b6 01       	movw	r22, r12
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <fputc>
 41e:	e7 cf       	rjmp	.-50     	; 0x3ee <vfprintf+0x24>
 420:	91 2c       	mov	r9, r1
 422:	21 2c       	mov	r2, r1
 424:	31 2c       	mov	r3, r1
 426:	ff e1       	ldi	r31, 0x1F	; 31
 428:	f3 15       	cp	r31, r3
 42a:	d8 f0       	brcs	.+54     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 42c:	8b 32       	cpi	r24, 0x2B	; 43
 42e:	79 f0       	breq	.+30     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 430:	38 f4       	brcc	.+14     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 432:	80 32       	cpi	r24, 0x20	; 32
 434:	79 f0       	breq	.+30     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 436:	83 32       	cpi	r24, 0x23	; 35
 438:	a1 f4       	brne	.+40     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 43a:	23 2d       	mov	r18, r3
 43c:	20 61       	ori	r18, 0x10	; 16
 43e:	1d c0       	rjmp	.+58     	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 440:	8d 32       	cpi	r24, 0x2D	; 45
 442:	61 f0       	breq	.+24     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 444:	80 33       	cpi	r24, 0x30	; 48
 446:	69 f4       	brne	.+26     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 448:	23 2d       	mov	r18, r3
 44a:	21 60       	ori	r18, 0x01	; 1
 44c:	16 c0       	rjmp	.+44     	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 44e:	83 2d       	mov	r24, r3
 450:	82 60       	ori	r24, 0x02	; 2
 452:	38 2e       	mov	r3, r24
 454:	e3 2d       	mov	r30, r3
 456:	e4 60       	ori	r30, 0x04	; 4
 458:	3e 2e       	mov	r3, r30
 45a:	2a c0       	rjmp	.+84     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 45c:	f3 2d       	mov	r31, r3
 45e:	f8 60       	ori	r31, 0x08	; 8
 460:	1d c0       	rjmp	.+58     	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 462:	37 fc       	sbrc	r3, 7
 464:	2d c0       	rjmp	.+90     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 466:	20 ed       	ldi	r18, 0xD0	; 208
 468:	28 0f       	add	r18, r24
 46a:	2a 30       	cpi	r18, 0x0A	; 10
 46c:	40 f0       	brcs	.+16     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 46e:	8e 32       	cpi	r24, 0x2E	; 46
 470:	b9 f4       	brne	.+46     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 472:	36 fc       	sbrc	r3, 6
 474:	81 c1       	rjmp	.+770    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
 476:	23 2d       	mov	r18, r3
 478:	20 64       	ori	r18, 0x40	; 64
 47a:	32 2e       	mov	r3, r18
 47c:	19 c0       	rjmp	.+50     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 47e:	36 fe       	sbrs	r3, 6
 480:	06 c0       	rjmp	.+12     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 482:	8a e0       	ldi	r24, 0x0A	; 10
 484:	98 9e       	mul	r9, r24
 486:	20 0d       	add	r18, r0
 488:	11 24       	eor	r1, r1
 48a:	92 2e       	mov	r9, r18
 48c:	11 c0       	rjmp	.+34     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 48e:	ea e0       	ldi	r30, 0x0A	; 10
 490:	2e 9e       	mul	r2, r30
 492:	20 0d       	add	r18, r0
 494:	11 24       	eor	r1, r1
 496:	22 2e       	mov	r2, r18
 498:	f3 2d       	mov	r31, r3
 49a:	f0 62       	ori	r31, 0x20	; 32
 49c:	3f 2e       	mov	r3, r31
 49e:	08 c0       	rjmp	.+16     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4a0:	8c 36       	cpi	r24, 0x6C	; 108
 4a2:	21 f4       	brne	.+8      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 4a4:	83 2d       	mov	r24, r3
 4a6:	80 68       	ori	r24, 0x80	; 128
 4a8:	38 2e       	mov	r3, r24
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4ac:	88 36       	cpi	r24, 0x68	; 104
 4ae:	41 f4       	brne	.+16     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4b0:	f7 01       	movw	r30, r14
 4b2:	93 fd       	sbrc	r25, 3
 4b4:	85 91       	lpm	r24, Z+
 4b6:	93 ff       	sbrs	r25, 3
 4b8:	81 91       	ld	r24, Z+
 4ba:	7f 01       	movw	r14, r30
 4bc:	81 11       	cpse	r24, r1
 4be:	b3 cf       	rjmp	.-154    	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 4c0:	98 2f       	mov	r25, r24
 4c2:	9f 7d       	andi	r25, 0xDF	; 223
 4c4:	95 54       	subi	r25, 0x45	; 69
 4c6:	93 30       	cpi	r25, 0x03	; 3
 4c8:	28 f4       	brcc	.+10     	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 4ca:	0c 5f       	subi	r16, 0xFC	; 252
 4cc:	1f 4f       	sbci	r17, 0xFF	; 255
 4ce:	9f e3       	ldi	r25, 0x3F	; 63
 4d0:	99 83       	std	Y+1, r25	; 0x01
 4d2:	0d c0       	rjmp	.+26     	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 4d4:	83 36       	cpi	r24, 0x63	; 99
 4d6:	31 f0       	breq	.+12     	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 4d8:	83 37       	cpi	r24, 0x73	; 115
 4da:	71 f0       	breq	.+28     	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 4dc:	83 35       	cpi	r24, 0x53	; 83
 4de:	09 f0       	breq	.+2      	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 4e0:	59 c0       	rjmp	.+178    	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
 4e2:	21 c0       	rjmp	.+66     	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 4e4:	f8 01       	movw	r30, r16
 4e6:	80 81       	ld	r24, Z
 4e8:	89 83       	std	Y+1, r24	; 0x01
 4ea:	0e 5f       	subi	r16, 0xFE	; 254
 4ec:	1f 4f       	sbci	r17, 0xFF	; 255
 4ee:	88 24       	eor	r8, r8
 4f0:	83 94       	inc	r8
 4f2:	91 2c       	mov	r9, r1
 4f4:	53 01       	movw	r10, r6
 4f6:	13 c0       	rjmp	.+38     	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 4f8:	28 01       	movw	r4, r16
 4fa:	f2 e0       	ldi	r31, 0x02	; 2
 4fc:	4f 0e       	add	r4, r31
 4fe:	51 1c       	adc	r5, r1
 500:	f8 01       	movw	r30, r16
 502:	a0 80       	ld	r10, Z
 504:	b1 80       	ldd	r11, Z+1	; 0x01
 506:	36 fe       	sbrs	r3, 6
 508:	03 c0       	rjmp	.+6      	; 0x510 <__EEPROM_REGION_LENGTH__+0x110>
 50a:	69 2d       	mov	r22, r9
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	02 c0       	rjmp	.+4      	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
 510:	6f ef       	ldi	r22, 0xFF	; 255
 512:	7f ef       	ldi	r23, 0xFF	; 255
 514:	c5 01       	movw	r24, r10
 516:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <strnlen>
 51a:	4c 01       	movw	r8, r24
 51c:	82 01       	movw	r16, r4
 51e:	f3 2d       	mov	r31, r3
 520:	ff 77       	andi	r31, 0x7F	; 127
 522:	3f 2e       	mov	r3, r31
 524:	16 c0       	rjmp	.+44     	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
 526:	28 01       	movw	r4, r16
 528:	22 e0       	ldi	r18, 0x02	; 2
 52a:	42 0e       	add	r4, r18
 52c:	51 1c       	adc	r5, r1
 52e:	f8 01       	movw	r30, r16
 530:	a0 80       	ld	r10, Z
 532:	b1 80       	ldd	r11, Z+1	; 0x01
 534:	36 fe       	sbrs	r3, 6
 536:	03 c0       	rjmp	.+6      	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
 538:	69 2d       	mov	r22, r9
 53a:	70 e0       	ldi	r23, 0x00	; 0
 53c:	02 c0       	rjmp	.+4      	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 53e:	6f ef       	ldi	r22, 0xFF	; 255
 540:	7f ef       	ldi	r23, 0xFF	; 255
 542:	c5 01       	movw	r24, r10
 544:	0e 94 c6 03 	call	0x78c	; 0x78c <strnlen_P>
 548:	4c 01       	movw	r8, r24
 54a:	f3 2d       	mov	r31, r3
 54c:	f0 68       	ori	r31, 0x80	; 128
 54e:	3f 2e       	mov	r3, r31
 550:	82 01       	movw	r16, r4
 552:	33 fc       	sbrc	r3, 3
 554:	1b c0       	rjmp	.+54     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 556:	82 2d       	mov	r24, r2
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	88 16       	cp	r8, r24
 55c:	99 06       	cpc	r9, r25
 55e:	b0 f4       	brcc	.+44     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 560:	b6 01       	movw	r22, r12
 562:	80 e2       	ldi	r24, 0x20	; 32
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <fputc>
 56a:	2a 94       	dec	r2
 56c:	f4 cf       	rjmp	.-24     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 56e:	f5 01       	movw	r30, r10
 570:	37 fc       	sbrc	r3, 7
 572:	85 91       	lpm	r24, Z+
 574:	37 fe       	sbrs	r3, 7
 576:	81 91       	ld	r24, Z+
 578:	5f 01       	movw	r10, r30
 57a:	b6 01       	movw	r22, r12
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <fputc>
 582:	21 10       	cpse	r2, r1
 584:	2a 94       	dec	r2
 586:	21 e0       	ldi	r18, 0x01	; 1
 588:	82 1a       	sub	r8, r18
 58a:	91 08       	sbc	r9, r1
 58c:	81 14       	cp	r8, r1
 58e:	91 04       	cpc	r9, r1
 590:	71 f7       	brne	.-36     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 592:	e8 c0       	rjmp	.+464    	; 0x764 <__EEPROM_REGION_LENGTH__+0x364>
 594:	84 36       	cpi	r24, 0x64	; 100
 596:	11 f0       	breq	.+4      	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 598:	89 36       	cpi	r24, 0x69	; 105
 59a:	41 f5       	brne	.+80     	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 59c:	f8 01       	movw	r30, r16
 59e:	37 fe       	sbrs	r3, 7
 5a0:	07 c0       	rjmp	.+14     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5a2:	60 81       	ld	r22, Z
 5a4:	71 81       	ldd	r23, Z+1	; 0x01
 5a6:	82 81       	ldd	r24, Z+2	; 0x02
 5a8:	93 81       	ldd	r25, Z+3	; 0x03
 5aa:	0c 5f       	subi	r16, 0xFC	; 252
 5ac:	1f 4f       	sbci	r17, 0xFF	; 255
 5ae:	08 c0       	rjmp	.+16     	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5b0:	60 81       	ld	r22, Z
 5b2:	71 81       	ldd	r23, Z+1	; 0x01
 5b4:	07 2e       	mov	r0, r23
 5b6:	00 0c       	add	r0, r0
 5b8:	88 0b       	sbc	r24, r24
 5ba:	99 0b       	sbc	r25, r25
 5bc:	0e 5f       	subi	r16, 0xFE	; 254
 5be:	1f 4f       	sbci	r17, 0xFF	; 255
 5c0:	f3 2d       	mov	r31, r3
 5c2:	ff 76       	andi	r31, 0x6F	; 111
 5c4:	3f 2e       	mov	r3, r31
 5c6:	97 ff       	sbrs	r25, 7
 5c8:	09 c0       	rjmp	.+18     	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
 5ca:	90 95       	com	r25
 5cc:	80 95       	com	r24
 5ce:	70 95       	com	r23
 5d0:	61 95       	neg	r22
 5d2:	7f 4f       	sbci	r23, 0xFF	; 255
 5d4:	8f 4f       	sbci	r24, 0xFF	; 255
 5d6:	9f 4f       	sbci	r25, 0xFF	; 255
 5d8:	f0 68       	ori	r31, 0x80	; 128
 5da:	3f 2e       	mov	r3, r31
 5dc:	2a e0       	ldi	r18, 0x0A	; 10
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	a3 01       	movw	r20, r6
 5e2:	0e 94 18 04 	call	0x830	; 0x830 <__ultoa_invert>
 5e6:	88 2e       	mov	r8, r24
 5e8:	86 18       	sub	r8, r6
 5ea:	45 c0       	rjmp	.+138    	; 0x676 <__EEPROM_REGION_LENGTH__+0x276>
 5ec:	85 37       	cpi	r24, 0x75	; 117
 5ee:	31 f4       	brne	.+12     	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5f0:	23 2d       	mov	r18, r3
 5f2:	2f 7e       	andi	r18, 0xEF	; 239
 5f4:	b2 2e       	mov	r11, r18
 5f6:	2a e0       	ldi	r18, 0x0A	; 10
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	25 c0       	rjmp	.+74     	; 0x646 <__EEPROM_REGION_LENGTH__+0x246>
 5fc:	93 2d       	mov	r25, r3
 5fe:	99 7f       	andi	r25, 0xF9	; 249
 600:	b9 2e       	mov	r11, r25
 602:	8f 36       	cpi	r24, 0x6F	; 111
 604:	c1 f0       	breq	.+48     	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 606:	18 f4       	brcc	.+6      	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 608:	88 35       	cpi	r24, 0x58	; 88
 60a:	79 f0       	breq	.+30     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 60c:	b5 c0       	rjmp	.+362    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
 60e:	80 37       	cpi	r24, 0x70	; 112
 610:	19 f0       	breq	.+6      	; 0x618 <__EEPROM_REGION_LENGTH__+0x218>
 612:	88 37       	cpi	r24, 0x78	; 120
 614:	21 f0       	breq	.+8      	; 0x61e <__EEPROM_REGION_LENGTH__+0x21e>
 616:	b0 c0       	rjmp	.+352    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
 618:	e9 2f       	mov	r30, r25
 61a:	e0 61       	ori	r30, 0x10	; 16
 61c:	be 2e       	mov	r11, r30
 61e:	b4 fe       	sbrs	r11, 4
 620:	0d c0       	rjmp	.+26     	; 0x63c <__EEPROM_REGION_LENGTH__+0x23c>
 622:	fb 2d       	mov	r31, r11
 624:	f4 60       	ori	r31, 0x04	; 4
 626:	bf 2e       	mov	r11, r31
 628:	09 c0       	rjmp	.+18     	; 0x63c <__EEPROM_REGION_LENGTH__+0x23c>
 62a:	34 fe       	sbrs	r3, 4
 62c:	0a c0       	rjmp	.+20     	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 62e:	29 2f       	mov	r18, r25
 630:	26 60       	ori	r18, 0x06	; 6
 632:	b2 2e       	mov	r11, r18
 634:	06 c0       	rjmp	.+12     	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 636:	28 e0       	ldi	r18, 0x08	; 8
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	05 c0       	rjmp	.+10     	; 0x646 <__EEPROM_REGION_LENGTH__+0x246>
 63c:	20 e1       	ldi	r18, 0x10	; 16
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	02 c0       	rjmp	.+4      	; 0x646 <__EEPROM_REGION_LENGTH__+0x246>
 642:	20 e1       	ldi	r18, 0x10	; 16
 644:	32 e0       	ldi	r19, 0x02	; 2
 646:	f8 01       	movw	r30, r16
 648:	b7 fe       	sbrs	r11, 7
 64a:	07 c0       	rjmp	.+14     	; 0x65a <__EEPROM_REGION_LENGTH__+0x25a>
 64c:	60 81       	ld	r22, Z
 64e:	71 81       	ldd	r23, Z+1	; 0x01
 650:	82 81       	ldd	r24, Z+2	; 0x02
 652:	93 81       	ldd	r25, Z+3	; 0x03
 654:	0c 5f       	subi	r16, 0xFC	; 252
 656:	1f 4f       	sbci	r17, 0xFF	; 255
 658:	06 c0       	rjmp	.+12     	; 0x666 <__EEPROM_REGION_LENGTH__+0x266>
 65a:	60 81       	ld	r22, Z
 65c:	71 81       	ldd	r23, Z+1	; 0x01
 65e:	80 e0       	ldi	r24, 0x00	; 0
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	0e 5f       	subi	r16, 0xFE	; 254
 664:	1f 4f       	sbci	r17, 0xFF	; 255
 666:	a3 01       	movw	r20, r6
 668:	0e 94 18 04 	call	0x830	; 0x830 <__ultoa_invert>
 66c:	88 2e       	mov	r8, r24
 66e:	86 18       	sub	r8, r6
 670:	fb 2d       	mov	r31, r11
 672:	ff 77       	andi	r31, 0x7F	; 127
 674:	3f 2e       	mov	r3, r31
 676:	36 fe       	sbrs	r3, 6
 678:	0d c0       	rjmp	.+26     	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
 67a:	23 2d       	mov	r18, r3
 67c:	2e 7f       	andi	r18, 0xFE	; 254
 67e:	a2 2e       	mov	r10, r18
 680:	89 14       	cp	r8, r9
 682:	58 f4       	brcc	.+22     	; 0x69a <__EEPROM_REGION_LENGTH__+0x29a>
 684:	34 fe       	sbrs	r3, 4
 686:	0b c0       	rjmp	.+22     	; 0x69e <__EEPROM_REGION_LENGTH__+0x29e>
 688:	32 fc       	sbrc	r3, 2
 68a:	09 c0       	rjmp	.+18     	; 0x69e <__EEPROM_REGION_LENGTH__+0x29e>
 68c:	83 2d       	mov	r24, r3
 68e:	8e 7e       	andi	r24, 0xEE	; 238
 690:	a8 2e       	mov	r10, r24
 692:	05 c0       	rjmp	.+10     	; 0x69e <__EEPROM_REGION_LENGTH__+0x29e>
 694:	b8 2c       	mov	r11, r8
 696:	a3 2c       	mov	r10, r3
 698:	03 c0       	rjmp	.+6      	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
 69a:	b8 2c       	mov	r11, r8
 69c:	01 c0       	rjmp	.+2      	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
 69e:	b9 2c       	mov	r11, r9
 6a0:	a4 fe       	sbrs	r10, 4
 6a2:	0f c0       	rjmp	.+30     	; 0x6c2 <__EEPROM_REGION_LENGTH__+0x2c2>
 6a4:	fe 01       	movw	r30, r28
 6a6:	e8 0d       	add	r30, r8
 6a8:	f1 1d       	adc	r31, r1
 6aa:	80 81       	ld	r24, Z
 6ac:	80 33       	cpi	r24, 0x30	; 48
 6ae:	21 f4       	brne	.+8      	; 0x6b8 <__EEPROM_REGION_LENGTH__+0x2b8>
 6b0:	9a 2d       	mov	r25, r10
 6b2:	99 7e       	andi	r25, 0xE9	; 233
 6b4:	a9 2e       	mov	r10, r25
 6b6:	09 c0       	rjmp	.+18     	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 6b8:	a2 fe       	sbrs	r10, 2
 6ba:	06 c0       	rjmp	.+12     	; 0x6c8 <__EEPROM_REGION_LENGTH__+0x2c8>
 6bc:	b3 94       	inc	r11
 6be:	b3 94       	inc	r11
 6c0:	04 c0       	rjmp	.+8      	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 6c2:	8a 2d       	mov	r24, r10
 6c4:	86 78       	andi	r24, 0x86	; 134
 6c6:	09 f0       	breq	.+2      	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 6c8:	b3 94       	inc	r11
 6ca:	a3 fc       	sbrc	r10, 3
 6cc:	11 c0       	rjmp	.+34     	; 0x6f0 <__EEPROM_REGION_LENGTH__+0x2f0>
 6ce:	a0 fe       	sbrs	r10, 0
 6d0:	06 c0       	rjmp	.+12     	; 0x6de <__EEPROM_REGION_LENGTH__+0x2de>
 6d2:	b2 14       	cp	r11, r2
 6d4:	88 f4       	brcc	.+34     	; 0x6f8 <__EEPROM_REGION_LENGTH__+0x2f8>
 6d6:	28 0c       	add	r2, r8
 6d8:	92 2c       	mov	r9, r2
 6da:	9b 18       	sub	r9, r11
 6dc:	0e c0       	rjmp	.+28     	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
 6de:	b2 14       	cp	r11, r2
 6e0:	60 f4       	brcc	.+24     	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
 6e2:	b6 01       	movw	r22, r12
 6e4:	80 e2       	ldi	r24, 0x20	; 32
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <fputc>
 6ec:	b3 94       	inc	r11
 6ee:	f7 cf       	rjmp	.-18     	; 0x6de <__EEPROM_REGION_LENGTH__+0x2de>
 6f0:	b2 14       	cp	r11, r2
 6f2:	18 f4       	brcc	.+6      	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
 6f4:	2b 18       	sub	r2, r11
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <__EEPROM_REGION_LENGTH__+0x2fc>
 6f8:	98 2c       	mov	r9, r8
 6fa:	21 2c       	mov	r2, r1
 6fc:	a4 fe       	sbrs	r10, 4
 6fe:	10 c0       	rjmp	.+32     	; 0x720 <__EEPROM_REGION_LENGTH__+0x320>
 700:	b6 01       	movw	r22, r12
 702:	80 e3       	ldi	r24, 0x30	; 48
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <fputc>
 70a:	a2 fe       	sbrs	r10, 2
 70c:	17 c0       	rjmp	.+46     	; 0x73c <__EEPROM_REGION_LENGTH__+0x33c>
 70e:	a1 fc       	sbrc	r10, 1
 710:	03 c0       	rjmp	.+6      	; 0x718 <__EEPROM_REGION_LENGTH__+0x318>
 712:	88 e7       	ldi	r24, 0x78	; 120
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	02 c0       	rjmp	.+4      	; 0x71c <__EEPROM_REGION_LENGTH__+0x31c>
 718:	88 e5       	ldi	r24, 0x58	; 88
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	b6 01       	movw	r22, r12
 71e:	0c c0       	rjmp	.+24     	; 0x738 <__EEPROM_REGION_LENGTH__+0x338>
 720:	8a 2d       	mov	r24, r10
 722:	86 78       	andi	r24, 0x86	; 134
 724:	59 f0       	breq	.+22     	; 0x73c <__EEPROM_REGION_LENGTH__+0x33c>
 726:	a1 fe       	sbrs	r10, 1
 728:	02 c0       	rjmp	.+4      	; 0x72e <__EEPROM_REGION_LENGTH__+0x32e>
 72a:	8b e2       	ldi	r24, 0x2B	; 43
 72c:	01 c0       	rjmp	.+2      	; 0x730 <__EEPROM_REGION_LENGTH__+0x330>
 72e:	80 e2       	ldi	r24, 0x20	; 32
 730:	a7 fc       	sbrc	r10, 7
 732:	8d e2       	ldi	r24, 0x2D	; 45
 734:	b6 01       	movw	r22, r12
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <fputc>
 73c:	89 14       	cp	r8, r9
 73e:	38 f4       	brcc	.+14     	; 0x74e <__EEPROM_REGION_LENGTH__+0x34e>
 740:	b6 01       	movw	r22, r12
 742:	80 e3       	ldi	r24, 0x30	; 48
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <fputc>
 74a:	9a 94       	dec	r9
 74c:	f7 cf       	rjmp	.-18     	; 0x73c <__EEPROM_REGION_LENGTH__+0x33c>
 74e:	8a 94       	dec	r8
 750:	f3 01       	movw	r30, r6
 752:	e8 0d       	add	r30, r8
 754:	f1 1d       	adc	r31, r1
 756:	80 81       	ld	r24, Z
 758:	b6 01       	movw	r22, r12
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <fputc>
 760:	81 10       	cpse	r8, r1
 762:	f5 cf       	rjmp	.-22     	; 0x74e <__EEPROM_REGION_LENGTH__+0x34e>
 764:	22 20       	and	r2, r2
 766:	09 f4       	brne	.+2      	; 0x76a <__EEPROM_REGION_LENGTH__+0x36a>
 768:	42 ce       	rjmp	.-892    	; 0x3ee <vfprintf+0x24>
 76a:	b6 01       	movw	r22, r12
 76c:	80 e2       	ldi	r24, 0x20	; 32
 76e:	90 e0       	ldi	r25, 0x00	; 0
 770:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <fputc>
 774:	2a 94       	dec	r2
 776:	f6 cf       	rjmp	.-20     	; 0x764 <__EEPROM_REGION_LENGTH__+0x364>
 778:	f6 01       	movw	r30, r12
 77a:	86 81       	ldd	r24, Z+6	; 0x06
 77c:	97 81       	ldd	r25, Z+7	; 0x07
 77e:	02 c0       	rjmp	.+4      	; 0x784 <__EEPROM_REGION_LENGTH__+0x384>
 780:	8f ef       	ldi	r24, 0xFF	; 255
 782:	9f ef       	ldi	r25, 0xFF	; 255
 784:	2b 96       	adiw	r28, 0x0b	; 11
 786:	e2 e1       	ldi	r30, 0x12	; 18
 788:	0c 94 92 04 	jmp	0x924	; 0x924 <__epilogue_restores__>

0000078c <strnlen_P>:
 78c:	fc 01       	movw	r30, r24
 78e:	05 90       	lpm	r0, Z+
 790:	61 50       	subi	r22, 0x01	; 1
 792:	70 40       	sbci	r23, 0x00	; 0
 794:	01 10       	cpse	r0, r1
 796:	d8 f7       	brcc	.-10     	; 0x78e <strnlen_P+0x2>
 798:	80 95       	com	r24
 79a:	90 95       	com	r25
 79c:	8e 0f       	add	r24, r30
 79e:	9f 1f       	adc	r25, r31
 7a0:	08 95       	ret

000007a2 <strnlen>:
 7a2:	fc 01       	movw	r30, r24
 7a4:	61 50       	subi	r22, 0x01	; 1
 7a6:	70 40       	sbci	r23, 0x00	; 0
 7a8:	01 90       	ld	r0, Z+
 7aa:	01 10       	cpse	r0, r1
 7ac:	d8 f7       	brcc	.-10     	; 0x7a4 <strnlen+0x2>
 7ae:	80 95       	com	r24
 7b0:	90 95       	com	r25
 7b2:	8e 0f       	add	r24, r30
 7b4:	9f 1f       	adc	r25, r31
 7b6:	08 95       	ret

000007b8 <fputc>:
 7b8:	0f 93       	push	r16
 7ba:	1f 93       	push	r17
 7bc:	cf 93       	push	r28
 7be:	df 93       	push	r29
 7c0:	fb 01       	movw	r30, r22
 7c2:	23 81       	ldd	r18, Z+3	; 0x03
 7c4:	21 fd       	sbrc	r18, 1
 7c6:	03 c0       	rjmp	.+6      	; 0x7ce <fputc+0x16>
 7c8:	8f ef       	ldi	r24, 0xFF	; 255
 7ca:	9f ef       	ldi	r25, 0xFF	; 255
 7cc:	2c c0       	rjmp	.+88     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 7ce:	22 ff       	sbrs	r18, 2
 7d0:	16 c0       	rjmp	.+44     	; 0x7fe <fputc+0x46>
 7d2:	46 81       	ldd	r20, Z+6	; 0x06
 7d4:	57 81       	ldd	r21, Z+7	; 0x07
 7d6:	24 81       	ldd	r18, Z+4	; 0x04
 7d8:	35 81       	ldd	r19, Z+5	; 0x05
 7da:	42 17       	cp	r20, r18
 7dc:	53 07       	cpc	r21, r19
 7de:	44 f4       	brge	.+16     	; 0x7f0 <fputc+0x38>
 7e0:	a0 81       	ld	r26, Z
 7e2:	b1 81       	ldd	r27, Z+1	; 0x01
 7e4:	9d 01       	movw	r18, r26
 7e6:	2f 5f       	subi	r18, 0xFF	; 255
 7e8:	3f 4f       	sbci	r19, 0xFF	; 255
 7ea:	31 83       	std	Z+1, r19	; 0x01
 7ec:	20 83       	st	Z, r18
 7ee:	8c 93       	st	X, r24
 7f0:	26 81       	ldd	r18, Z+6	; 0x06
 7f2:	37 81       	ldd	r19, Z+7	; 0x07
 7f4:	2f 5f       	subi	r18, 0xFF	; 255
 7f6:	3f 4f       	sbci	r19, 0xFF	; 255
 7f8:	37 83       	std	Z+7, r19	; 0x07
 7fa:	26 83       	std	Z+6, r18	; 0x06
 7fc:	14 c0       	rjmp	.+40     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 7fe:	8b 01       	movw	r16, r22
 800:	ec 01       	movw	r28, r24
 802:	fb 01       	movw	r30, r22
 804:	00 84       	ldd	r0, Z+8	; 0x08
 806:	f1 85       	ldd	r31, Z+9	; 0x09
 808:	e0 2d       	mov	r30, r0
 80a:	09 95       	icall
 80c:	89 2b       	or	r24, r25
 80e:	e1 f6       	brne	.-72     	; 0x7c8 <fputc+0x10>
 810:	d8 01       	movw	r26, r16
 812:	16 96       	adiw	r26, 0x06	; 6
 814:	8d 91       	ld	r24, X+
 816:	9c 91       	ld	r25, X
 818:	17 97       	sbiw	r26, 0x07	; 7
 81a:	01 96       	adiw	r24, 0x01	; 1
 81c:	17 96       	adiw	r26, 0x07	; 7
 81e:	9c 93       	st	X, r25
 820:	8e 93       	st	-X, r24
 822:	16 97       	sbiw	r26, 0x06	; 6
 824:	ce 01       	movw	r24, r28
 826:	df 91       	pop	r29
 828:	cf 91       	pop	r28
 82a:	1f 91       	pop	r17
 82c:	0f 91       	pop	r16
 82e:	08 95       	ret

00000830 <__ultoa_invert>:
 830:	fa 01       	movw	r30, r20
 832:	aa 27       	eor	r26, r26
 834:	28 30       	cpi	r18, 0x08	; 8
 836:	51 f1       	breq	.+84     	; 0x88c <__ultoa_invert+0x5c>
 838:	20 31       	cpi	r18, 0x10	; 16
 83a:	81 f1       	breq	.+96     	; 0x89c <__ultoa_invert+0x6c>
 83c:	e8 94       	clt
 83e:	6f 93       	push	r22
 840:	6e 7f       	andi	r22, 0xFE	; 254
 842:	6e 5f       	subi	r22, 0xFE	; 254
 844:	7f 4f       	sbci	r23, 0xFF	; 255
 846:	8f 4f       	sbci	r24, 0xFF	; 255
 848:	9f 4f       	sbci	r25, 0xFF	; 255
 84a:	af 4f       	sbci	r26, 0xFF	; 255
 84c:	b1 e0       	ldi	r27, 0x01	; 1
 84e:	3e d0       	rcall	.+124    	; 0x8cc <__ultoa_invert+0x9c>
 850:	b4 e0       	ldi	r27, 0x04	; 4
 852:	3c d0       	rcall	.+120    	; 0x8cc <__ultoa_invert+0x9c>
 854:	67 0f       	add	r22, r23
 856:	78 1f       	adc	r23, r24
 858:	89 1f       	adc	r24, r25
 85a:	9a 1f       	adc	r25, r26
 85c:	a1 1d       	adc	r26, r1
 85e:	68 0f       	add	r22, r24
 860:	79 1f       	adc	r23, r25
 862:	8a 1f       	adc	r24, r26
 864:	91 1d       	adc	r25, r1
 866:	a1 1d       	adc	r26, r1
 868:	6a 0f       	add	r22, r26
 86a:	71 1d       	adc	r23, r1
 86c:	81 1d       	adc	r24, r1
 86e:	91 1d       	adc	r25, r1
 870:	a1 1d       	adc	r26, r1
 872:	20 d0       	rcall	.+64     	; 0x8b4 <__ultoa_invert+0x84>
 874:	09 f4       	brne	.+2      	; 0x878 <__ultoa_invert+0x48>
 876:	68 94       	set
 878:	3f 91       	pop	r19
 87a:	2a e0       	ldi	r18, 0x0A	; 10
 87c:	26 9f       	mul	r18, r22
 87e:	11 24       	eor	r1, r1
 880:	30 19       	sub	r19, r0
 882:	30 5d       	subi	r19, 0xD0	; 208
 884:	31 93       	st	Z+, r19
 886:	de f6       	brtc	.-74     	; 0x83e <__ultoa_invert+0xe>
 888:	cf 01       	movw	r24, r30
 88a:	08 95       	ret
 88c:	46 2f       	mov	r20, r22
 88e:	47 70       	andi	r20, 0x07	; 7
 890:	40 5d       	subi	r20, 0xD0	; 208
 892:	41 93       	st	Z+, r20
 894:	b3 e0       	ldi	r27, 0x03	; 3
 896:	0f d0       	rcall	.+30     	; 0x8b6 <__ultoa_invert+0x86>
 898:	c9 f7       	brne	.-14     	; 0x88c <__ultoa_invert+0x5c>
 89a:	f6 cf       	rjmp	.-20     	; 0x888 <__ultoa_invert+0x58>
 89c:	46 2f       	mov	r20, r22
 89e:	4f 70       	andi	r20, 0x0F	; 15
 8a0:	40 5d       	subi	r20, 0xD0	; 208
 8a2:	4a 33       	cpi	r20, 0x3A	; 58
 8a4:	18 f0       	brcs	.+6      	; 0x8ac <__ultoa_invert+0x7c>
 8a6:	49 5d       	subi	r20, 0xD9	; 217
 8a8:	31 fd       	sbrc	r19, 1
 8aa:	40 52       	subi	r20, 0x20	; 32
 8ac:	41 93       	st	Z+, r20
 8ae:	02 d0       	rcall	.+4      	; 0x8b4 <__ultoa_invert+0x84>
 8b0:	a9 f7       	brne	.-22     	; 0x89c <__ultoa_invert+0x6c>
 8b2:	ea cf       	rjmp	.-44     	; 0x888 <__ultoa_invert+0x58>
 8b4:	b4 e0       	ldi	r27, 0x04	; 4
 8b6:	a6 95       	lsr	r26
 8b8:	97 95       	ror	r25
 8ba:	87 95       	ror	r24
 8bc:	77 95       	ror	r23
 8be:	67 95       	ror	r22
 8c0:	ba 95       	dec	r27
 8c2:	c9 f7       	brne	.-14     	; 0x8b6 <__ultoa_invert+0x86>
 8c4:	00 97       	sbiw	r24, 0x00	; 0
 8c6:	61 05       	cpc	r22, r1
 8c8:	71 05       	cpc	r23, r1
 8ca:	08 95       	ret
 8cc:	9b 01       	movw	r18, r22
 8ce:	ac 01       	movw	r20, r24
 8d0:	0a 2e       	mov	r0, r26
 8d2:	06 94       	lsr	r0
 8d4:	57 95       	ror	r21
 8d6:	47 95       	ror	r20
 8d8:	37 95       	ror	r19
 8da:	27 95       	ror	r18
 8dc:	ba 95       	dec	r27
 8de:	c9 f7       	brne	.-14     	; 0x8d2 <__ultoa_invert+0xa2>
 8e0:	62 0f       	add	r22, r18
 8e2:	73 1f       	adc	r23, r19
 8e4:	84 1f       	adc	r24, r20
 8e6:	95 1f       	adc	r25, r21
 8e8:	a0 1d       	adc	r26, r0
 8ea:	08 95       	ret

000008ec <__prologue_saves__>:
 8ec:	2f 92       	push	r2
 8ee:	3f 92       	push	r3
 8f0:	4f 92       	push	r4
 8f2:	5f 92       	push	r5
 8f4:	6f 92       	push	r6
 8f6:	7f 92       	push	r7
 8f8:	8f 92       	push	r8
 8fa:	9f 92       	push	r9
 8fc:	af 92       	push	r10
 8fe:	bf 92       	push	r11
 900:	cf 92       	push	r12
 902:	df 92       	push	r13
 904:	ef 92       	push	r14
 906:	ff 92       	push	r15
 908:	0f 93       	push	r16
 90a:	1f 93       	push	r17
 90c:	cf 93       	push	r28
 90e:	df 93       	push	r29
 910:	cd b7       	in	r28, 0x3d	; 61
 912:	de b7       	in	r29, 0x3e	; 62
 914:	ca 1b       	sub	r28, r26
 916:	db 0b       	sbc	r29, r27
 918:	0f b6       	in	r0, 0x3f	; 63
 91a:	f8 94       	cli
 91c:	de bf       	out	0x3e, r29	; 62
 91e:	0f be       	out	0x3f, r0	; 63
 920:	cd bf       	out	0x3d, r28	; 61
 922:	09 94       	ijmp

00000924 <__epilogue_restores__>:
 924:	2a 88       	ldd	r2, Y+18	; 0x12
 926:	39 88       	ldd	r3, Y+17	; 0x11
 928:	48 88       	ldd	r4, Y+16	; 0x10
 92a:	5f 84       	ldd	r5, Y+15	; 0x0f
 92c:	6e 84       	ldd	r6, Y+14	; 0x0e
 92e:	7d 84       	ldd	r7, Y+13	; 0x0d
 930:	8c 84       	ldd	r8, Y+12	; 0x0c
 932:	9b 84       	ldd	r9, Y+11	; 0x0b
 934:	aa 84       	ldd	r10, Y+10	; 0x0a
 936:	b9 84       	ldd	r11, Y+9	; 0x09
 938:	c8 84       	ldd	r12, Y+8	; 0x08
 93a:	df 80       	ldd	r13, Y+7	; 0x07
 93c:	ee 80       	ldd	r14, Y+6	; 0x06
 93e:	fd 80       	ldd	r15, Y+5	; 0x05
 940:	0c 81       	ldd	r16, Y+4	; 0x04
 942:	1b 81       	ldd	r17, Y+3	; 0x03
 944:	aa 81       	ldd	r26, Y+2	; 0x02
 946:	b9 81       	ldd	r27, Y+1	; 0x01
 948:	ce 0f       	add	r28, r30
 94a:	d1 1d       	adc	r29, r1
 94c:	0f b6       	in	r0, 0x3f	; 63
 94e:	f8 94       	cli
 950:	de bf       	out	0x3e, r29	; 62
 952:	0f be       	out	0x3f, r0	; 63
 954:	cd bf       	out	0x3d, r28	; 61
 956:	ed 01       	movw	r28, r26
 958:	08 95       	ret

0000095a <_exit>:
 95a:	f8 94       	cli

0000095c <__stop_program>:
 95c:	ff cf       	rjmp	.-2      	; 0x95c <__stop_program>
